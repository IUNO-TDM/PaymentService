swagger: '2.0'
info:
  title: IUNO TDM Payment Service API
  description: Create invoices, check payment and forward coins.
  version: "1.0.0"
# the domain of the service
host: localhost:8080
# array of all schemes that your API supports
schemes:
  - http
#  - https
# will be prefixed to all paths
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
  - text/plain
paths:
  /invoices:
    post:
      summary: Add one new invoice.
      operationId: addInvoice
      parameters:
        - name: invoice
          description: one new invoice
          in: body
          required: true
          schema:
            $ref: '#/definitions/Invoice'
      responses:
        201:
          description: id of new invoice
          schema:
            $ref: "#/definitions/Invoice"
          headers:
            Location:
              description: the absolute path to the created resource
              type: string
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Error'
        503:
          description: service unavailable
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: The invoices endpoint returns a list of all known invoices ids.
      operationId: getInvoices
      responses:
        200:
          description: an array of invoice ids
          schema:
            type: array
            items:
              $ref: '#/definitions/InvoiceId'

  /invoices/{invoiceId}:
    get:
      summary: Returns information about the invoice to the provided id.
      operationId: getInvoiceById
      parameters:
        - name: invoiceId
          in: path
          type: string
          required: true
          description: the invoice id to get the information for
      responses:
        404:
          description: invoice not found
          schema:
            $ref: '#/definitions/Error'
        200:
          description: returns the information about the invoice
          schema:
            $ref: "#/definitions/Invoice"
    delete:
      summary: Deletes the invoice to the provided ID.
      operationId: deleteInvoiceById
      parameters:
        - name: invoiceId
          in: path
          type: string
          required: true
          description: the id of the invoice to delete
      responses:
        404:
          description: invoice not found
          schema:
            $ref: '#/definitions/Error'
        200:
          description: invoice deleted

  /invoices/{invoiceId}/bip21:
    get:
      summary: Returns a Bip21 URI for the invoice.
      operationId: getInvoiceBip21
      parameters:
        - name: invoiceId
          in: path
          type: string
          required: true
          description: the invoice id to get the Bip21 URI for
      responses:
        404:
          description: invoice not found
          schema:
            $ref: '#/definitions/Error'
        200:
          description: returns the Bip21 URI for the invoice
          schema:
            type: string

  /invoices/{invoiceId}/state:
    get:
      summary: Returns a confidence object that describes the invoices state.
      operationId: getInvoiceState
      parameters:
        - name: invoiceId
          in: path
          type: string
          required: true
          description: the invoice id to get the state for
      responses:
        404:
          description: invoice not found
          schema:
            $ref: '#/definitions/Error'
        200:
          description: returns the address value pairs for the invoice as array
          schema:
            $ref: '#/definitions/State'

  /invoices/{invoiceId}/transfers:
    get:
      summary: Returns a transfer object as array of address/value pairs to complete the invoice in one transaction.
      operationId: getInvoiceTransfers
      parameters:
        - name: invoiceId
          in: path
          type: string
          required: true
          description: the invoice id to get transfers for
      responses:
        404:
          description: invoice not found
          schema:
            $ref: '#/definitions/Error'
        200:
          description: returns the address value pairs for the invoice as array
          schema:
            type: array
            items:
              $ref: '#/definitions/AddressValuePair'

  /invoices/{invoiceId}/coupons:
    post:
      summary: Adds one coupon to the invoice.
      operationId: addCouponToInvoice
      parameters:
      - name: invoiceId
        in: path
        type: string
        required: true
        description: the id of the invoice the coupon is for
      - name: coupon
        in: body
        required: true
        description: coupon data
        schema:
          $ref: "#/definitions/Coupon"
      responses:
        503:
          description: balance of coupon could not be retrieved
          schema:
            $ref: '#/definitions/Error'
        409:
          description: invoice already closed
          schema:
            $ref: '#/definitions/Error'
        404:
          description: invoice id not found
          schema:
            $ref: '#/definitions/Error'
        201:
          description: returns the balance of the new coupon
          schema:
            $ref: '#/definitions/AddressValuePair'
          headers:
            Location:
              type: string
              description: the absolute path to the created resource
    get:
      summary: Returns a list of coupon adresses along with their balance.
      operationId: getInvoiceCoupons
      parameters:
      - name: invoiceId
        in: path
        type: string
        required: true
        description: the id of the invoice to get the coupons balances for
      responses:
        404:
          description: invoice id not found
          schema:
            $ref: '#/definitions/Error'
        200:
          description: returns the balance for each coupon
          schema:
            type: array
            items:
              $ref: '#/definitions/AddressValuePair'

  /invoices/{invoiceId}/coupons/{couponAddress}:
    get:
      summary: Returns the balance for the requested coupon.
      operationId: getInvoiceCouponBalance
      parameters:
      - name: invoiceId
        in: path
        type: string
        required: true
        description: the id of the invoice to get the coupons balance for
      - name: couponAddress
        in: path
        type: string
        required: true
        description: the address of the coupon to get the balance for
      responses:
        404:
          description: object not found
          schema:
            $ref: '#/definitions/Error'
        200:
          description: returns the balance of the coupon
          schema:
            $ref: '#/definitions/AddressValuePair'

definitions:
  InvoiceId:
    type: string
    format: uuid
    description: unique id of the invoice assigned by payment service

  Coupon:
    type: string
    description: Bip38 encoded Bitcoin private key

  AddressValuePair:
    type: object
    properties:
      address:
        type: string
        description: Bitcoin Base58 encoded public key hash address
      coin:
        type: integer
        format: int64
        description: value in Satoshis

  Invoice:
    type: object
    properties:
      totalAmount:
        type: integer
        format: int64
        description: total amount of Satoshis that are requested to be paid
      expiration:
        type: string
        format: date-time
        description: date after which this invoice is no longer valid
      transfers:
        type: array
        description: array of all transfer outputs with their values
        items:
          $ref: '#/definitions/AddressValuePair'
      invoiceId:
        $ref: '#/definitions/InvoiceId'
      referenceId:
        type: string
        description: id defined by the client for its internal reference, which is just stored and passed but not processed by the payment service

  State:
    description: invoice confidence state
    type: object
    properties:
      state:
        type: string
        description: confidence state
        default: unknown
        enum:
        - building
        - pending
        - dead
        - unknown
      depthInBlocks:
        type: integer
        format: int32
        description: depth of a building transaction in blocks

  Error:
    type: object
    properties:
      message:
        type: string
        description: meaningful error message
